<?xml version="1.0" encoding="UTF-8" ?>
<query>
  <_DataBaseUpdate>
    BEGIN TRY

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '담당자' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 담당자 int NOT NULL default 0
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '실행파일' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 실행파일 nvarchar(50) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '운영체제' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 운영체제 nvarchar(100) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = 'SQL버전' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD SQL버전 nvarchar(300) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '서비스타입' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 서비스타입 tinyint NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '확인자연락처' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 확인자연락처 varchar(20) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '인계자연락처' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 인계자연락처 varchar(20) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '처리자연락처' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 처리자연락처 varchar(20) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '수가' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 수가 nvarchar(10) NULL
      END
      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '약가' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 약가 nvarchar(10) NULL
      END
      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '치료재료' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 치료재료 nvarchar(10) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '취소사유' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 취소사유 ntext NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '실행메뉴' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 실행메뉴 nvarchar(50) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '세부화면' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 세부화면 nvarchar(50) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '본사AS' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 본사AS tinyint NULL
      END

      IF EXISTS (SELECT NAME FROM SYSCOLUMNS WHERE name = '접수연락처' AND ID = OBJECT_ID('N_Service')) BEGIN
         IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME ='N_Service' AND COLUMN_NAME = '접수연락처' AND DATA_TYPE = 'varchar' AND CHARACTER_MAXIMUM_LENGTH &lt; 20) BEGIN
             ALTER TABLE NeoAs..N_Service ALTER COLUMN 접수연락처 varchar(20) NULL
         End
      End

      IF EXISTS (SELECT NAME FROM SYSCOLUMNS WHERE name = '운영체제' AND ID = OBJECT_ID('N_Service')) BEGIN
         IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME ='N_Service' AND COLUMN_NAME = '운영체제' AND DATA_TYPE = 'nvarchar' AND CHARACTER_MAXIMUM_LENGTH &lt; 100) BEGIN
             ALTER TABLE NeoAs..N_Service ALTER COLUMN 운영체제 varchar(100) NULL
         End
      End

      SELECT '200' AS STATUS, '데이터베이스 업데이트 완료' AS Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message
    END CATCH
  </_DataBaseUpdate>
  <_Request>
    Begin Try
      Insert Into NeoAs..N_Service(
        기관코드, 기관명칭, 지사코드, 프로그램,
        서비스상태, 컴퓨터정보, 접수자, 접수연락처, 문의내용, 접수일자,
        현재버전, 보험규정, 병원전화, 팍스, 서버이름, 서버아이디,
        서버비밀번호, 데이터베이스, 인증서암호, 오픈담당자, 수탁기관, 실행파일,
        운영체제, SQL버전, 서비스타입, 수가, 약가, 치료재료,
        담당자
      )
      Values (
        '%s', '%s', '%s', '%s',
        '0', '%s', '%s', '%s', '%s', GETDATE(),
        '%s', '%s', '%s', '%s', '%s', '%s',
        '%s', '%s', '%s', '%s', '%s', '%s',
        '%s', '%s', '%s', '%s', '%s', '%s',
        '%s'
      )
      Select 0 As Status, 'SUCCESS' as Message, max(인덱스) as 'index'  From NeoAs..N_Service
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_Request>
  <_RequestList>
    Select 인덱스, 기관코드, 기관명칭, 지사코드,
           프로그램, 서비스상태, 컴퓨터정보, 접수자,
           접수연락처, 문의내용, ISNULL(응급여부, 0) AS 응급여부, CONVERT(char(19),접수일자,120) AS 접수일자,
           현재버전, 보험규정, 병원전화, 팍스, 서버이름, 서버아이디,
           서버비밀번호, 데이터베이스, 인증서암호, 오픈담당자, 수탁기관, 실행파일, ISNULL(실행메뉴,'') AS 실행메뉴, ISNULL(세부화면,'') AS 세부화면,
           운영체제, SQL버전, ISNULL(서비스타입,0) AS 서비스타입, 수가, 약가, 치료재료, ISNULL(취소사유,'') AS 취소사유, ISNULL(본사AS, 0) AS 본사AS, 담당자,
           ISNULL(확인자, '') AS 확인자, ISNULL(확인자ID,'') AS 확인자ID, ISNULL(확인자지사,'') AS 확인자지사, ISNULL(확인자연락처,'') AS 확인자연락처, ISNULL(CONVERT(char(19),확인일자,120),'') AS 확인일자,
           ISNULL(인계자, '') AS 인계자, ISNULL(인계자ID,'') AS 인계자ID, ISNULL(인계자지사,'') AS 인계자지사, ISNULL(인계자연락처,'') AS 인계자연락처, ISNULL(CONVERT(char(19),인계일자,120),'') AS 인계일자,
           ISNULL(처리자, '') AS 처리자, ISNULL(처리자ID,'') AS 처리자ID, ISNULL(처리자지사,'') AS 처리자지사, ISNULL(처리자연락처,'') AS 처리자연락처, ISNULL(CONVERT(char(19),처리일자,120),'') AS 처리일자
    From N_Service
    Where 1 = 1
    %s
    Order By %s
  </_RequestList>
  <_UpdateAs>
    Begin Try
      Update NeoAs..N_Service
      Set 서비스상태 = %s
      %s
      Where 인덱스 = %s
      Select 0 As Status, 'SUCCESS' As Message
    End Try
    Begin Catch
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    End Catch
  </_UpdateAs>
  <_TakeOver>
    BEGIN TRY
      Update NeoAs..N_Service
      Set 문의내용 = '%s'
      Where 인덱스 = %s

      Select 0 As Status, 'SUCCESS' As Message
    END TRY
    BEGIN catch
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END catch
  </_TakeOver>
  <_Versions_SENSE>
    Select 배포버전 From OCS_SERVER.MediChart.dbo.TB_센스라이브 Order By 배포버전 DESC
  </_Versions_SENSE>
  <_SendASToMember>
    BEGIN TRY
      Update NeoAs..N_Service
      Set 처리자ID = %s,
          처리자 = '%s',
          처리자지사 = '%s',
          처리자연락처 = '%s'
      Where 인덱스 = %s

      Insert Into NeoAs..N_ServiceReply
      (AS인덱스, 처리자ID, 처리자, 처리자지사, 처리내용, 처리일자)
      Values(%s, %s, '%s', '%s', '{%s}님이 {%s}님에게 전달하였습니다.', GETDATE())

      Select 0 As Status, 'SUCCESS' as Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_SendASToMember>
  <_ReplysList>
    Select AS인덱스, 처리자ID, 처리자, 처리자지사, 처리내용, ISNULL(CONVERT(char(19),처리일자,120),'') AS 처리일자 From NeoAs..N_ServiceReply
    Where AS인덱스 = %s
    Order By 처리일자 ASC
  </_ReplysList>
  <_AddReply>
    BEGIN TRY

      Insert Into NeoAs..N_ServiceReply
      (AS인덱스, 처리자ID, 처리자, 처리자지사, 처리내용, 처리일자)
      Values(%s, %s, '%s', '%s', '%s', GETDATE())

      Select 0 As Status, 'SUCCESS' as Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_AddReply>
  <_SaveCustomInfo>
    BEGIN TRY
      IF EXISTS (SELECT * FROM N_HospInfo WHERE 기관코드 = '%s' and 항목명칭 = '%s')
      BEGIN
        update N_HospInfo
        set 설정값 = '%s',
        수정일자 = GETDATE()
        WHERE 기관코드 = '%s' and 항목명칭 = '%s'
      END
      ELSE
      BEGIN
        insert into N_HospInfo
        values('%s', '%s', '%s', GETDATE())
      END

      Select 0 As Status, 'SUCCESS' as Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_SaveCustomInfo>
  <_ASHistory>
    Select 인덱스, 기관코드, 기관명칭, 지사코드,
           프로그램, 서비스상태, 컴퓨터정보, 접수자,
           접수연락처, {문의내용}, ISNULL(응급여부, 0) AS 응급여부, CONVERT(char(19),접수일자,120) AS 접수일자,
           현재버전, 보험규정, 병원전화, 팍스, 서버이름, 서버아이디,
           서버비밀번호, 데이터베이스, 인증서암호, 오픈담당자, 수탁기관, 실행파일, ISNULL(실행메뉴,'') AS 실행메뉴, ISNULL(세부화면,'') AS 세부화면,
           운영체제, SQL버전, ISNULL(서비스타입,0) AS 서비스타입, 수가, 약가, 치료재료, ISNULL(취소사유,'') AS 취소사유, ISNULL(본사AS, 0) AS 본사AS, 담당자,
           ISNULL(확인자, '') AS 확인자, ISNULL(확인자ID,'') AS 확인자ID, ISNULL(확인자지사,'') AS 확인자지사, ISNULL(확인자연락처,'') AS 확인자연락처, ISNULL(CONVERT(char(19),확인일자,120),'') AS 확인일자,
           ISNULL(인계자, '') AS 인계자, ISNULL(인계자ID,'') AS 인계자ID, ISNULL(인계자지사,'') AS 인계자지사, ISNULL(인계자연락처,'') AS 인계자연락처, ISNULL(CONVERT(char(19),인계일자,120),'') AS 인계일자,
           ISNULL(처리자, '') AS 처리자, ISNULL(처리자ID,'') AS 처리자ID, ISNULL(처리자지사,'') AS 처리자지사, ISNULL(처리자연락처,'') AS 처리자연락처, ISNULL(CONVERT(char(19),처리일자,120),'') AS 처리일자,
           CASE WHEN 서비스상태 = 4 AND ISNULL(본사AS,0) = 0  AND 인계자ID &lt;&gt; 0 AND 처리자ID &lt;&gt; 0 AND 인계자지사 &lt;&gt; 처리자지사 THEN 1 ELSE 0 END AS 수수료
    From N_Service
    Where 1 = 1
    %s
    Order By %s
  </_ASHistory>
  <_RankTotal>
    SELECT
    	SUM(CASE WHEN 인덱스 is not null THEN 1 ELSE 0 END) AS 전체,
    	SUM(CASE WHEN 서비스상태 = 0 THEN 1 ELSE 0 END) AS 미확인,
      SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
      SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
      SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소,
      SUM(CASE WHEN isnull(본사AS,0) = 1 THEN 1 ELSE 0 END) AS 본사
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
  </_RankTotal>
  <_RankArea>
    SELECT 지사코드,
    SUM(CASE WHEN 서비스상태 = 0 THEN 1 ELSE 0 END) AS 미확인,
    SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
    SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
    SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 0 AND 인계자지사 = 지사코드 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 인계,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 1 AND 인계자지사 = 지사코드 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 응급
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 지사코드
    ORDER BY 완료 DESC
  </_RankArea>
  <_RankMember>
    SELECT 처리자ID, 처리자, 처리자지사,
    SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
    SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
    SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 0 AND 인계자ID &lt;&gt; 0 AND 인계자지사 &lt;&gt; 처리자지사 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 인계,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 1 AND 인계자ID &lt;&gt; 0 AND 인계자지사 &lt;&gt; 처리자지사 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 응급
    FROM NeoAs..N_Service
    WHERE 1=1
    AND ISNULL(처리자ID,0) &lt;&gt; 0
    AND 지사코드 NOT IN ('0000', '0030', '0040')
    %s
    GROUP BY 처리자ID, 처리자, 처리자지사
    ORDER BY 완료 DESC, 인계 DESC, 응급 DESC
  </_RankMember>
  <_RankHosp>
    SELECT 기관코드, 기관명칭,
    COUNT(기관코드) AS 요청건수,
    SUM(CASE WHEN 서비스상태 = 0 THEN 1 ELSE 0 END) AS 미확인,
    SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
    SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
    SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 기관코드, 기관명칭
    ORDER BY 요청건수 DESC
  </_RankHosp>
  <_RankEmr>
    SELECT 프로그램, COUNT(프로그램) AS 발생건수
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 프로그램
    ORDER BY 발생건수 DESC;

    SELECT 프로그램, CASE WHEN ISNULL(실행파일,'') = '' THEN '기타' ELSE 실행파일 END AS 실행파일, COUNT(CASE WHEN ISNULL(실행파일,'') = '' THEN '기타' ELSE 실행파일 END) AS 발생건수
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 프로그램,CASE WHEN ISNULL(실행파일,'') = '' THEN '기타' ELSE 실행파일 END
    ORDER BY 프로그램, 발생건수 DESC
  </_RankEmr>
</query>
