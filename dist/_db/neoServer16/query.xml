<?xml version="1.0" encoding="UTF-8" ?>
<query>
  <_DataBaseUpdate>
    BEGIN TRY

      IF NOT EXISTS(Select Name From SYSCOLUMNS Where NAME = '수정자' AND ID = OBJECT_ID('N_병원특이사항'))
      BEGIN
        ALTER TABLE NeoAS..N_병원특이사항 ADD 수정자 int NULL        
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS Where NAME = '수정일자' AND ID = OBJECT_ID('N_병원특이사항'))
      BEGIN
        ALTER TABLE NeoAS..N_병원특이사항 ADD 수정일자 datetime NULL        
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS Where NAME = '처리일자' AND ID = OBJECT_ID('N_병원일지'))
      BEGIN
        ALTER TABLE NeoAS..N_병원일지 ADD 처리일자 datetime NULL        
      END
     
      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '담당자' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 담당자 int NOT NULL default 0
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '실행파일' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 실행파일 nvarchar(50) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '운영체제' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 운영체제 nvarchar(100) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = 'SQL버전' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD SQL버전 nvarchar(300) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '서비스타입' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 서비스타입 tinyint NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '확인자연락처' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 확인자연락처 varchar(20) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '인계자연락처' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 인계자연락처 varchar(20) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '처리자연락처' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 처리자연락처 varchar(20) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '수가' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 수가 nvarchar(10) NULL
      END
      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '약가' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 약가 nvarchar(10) NULL
      END
      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '치료재료' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 치료재료 nvarchar(10) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '취소사유' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 취소사유 ntext NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '실행메뉴' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 실행메뉴 nvarchar(50) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '세부화면' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 세부화면 nvarchar(50) NULL
      END

      IF NOT EXISTS(Select Name From SYSCOLUMNS WHERE NAME = '본사AS' AND ID = OBJECT_ID('N_Service'))
      BEGIN
        ALTER TABLE NeoAs..N_Service ADD 본사AS tinyint NULL
      END

      IF EXISTS (SELECT NAME FROM SYSCOLUMNS WHERE name = '접수연락처' AND ID = OBJECT_ID('N_Service')) BEGIN
         IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME ='N_Service' AND COLUMN_NAME = '접수연락처' AND DATA_TYPE = 'varchar' AND CHARACTER_MAXIMUM_LENGTH &lt; 20) BEGIN
             ALTER TABLE NeoAs..N_Service ALTER COLUMN 접수연락처 varchar(20) NULL
         End
      End

      IF EXISTS (SELECT NAME FROM SYSCOLUMNS WHERE name = '운영체제' AND ID = OBJECT_ID('N_Service')) BEGIN
         IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME ='N_Service' AND COLUMN_NAME = '운영체제' AND DATA_TYPE = 'nvarchar' AND CHARACTER_MAXIMUM_LENGTH &lt; 100) BEGIN
             ALTER TABLE NeoAs..N_Service ALTER COLUMN 운영체제 varchar(100) NULL
         End
      End

      IF NOT EXISTS(Select Name From SYS.TABLES WHERE name = 'N_병원일지')
        BEGIN
          CREATE TABLE N_병원일지(
            인덱스 int not null identity(1,1) primary key,
            USER_ID int not null,
            기관코드 varchar(8) not null,
            기관명칭 nvarchar(100) not null,
            프로그램 nvarchar(15) null,
            일지구분 tinyint not null,
            지사코드 varchar(4) null,
            내용 ntext null,
            작성자 int not null,
            작성일자 datetime not null,
            삭제 bit default 0
          )
        END
      
      IF NOT EXISTS(Select Name From SYS.TABLES WHERE name = 'N_병원특이사항')
        BEGIN
          CREATE TABLE N_병원특이사항(
            USER_ID int not null primary key,
            병원유형 tinyint null,
            전산담당 nvarchar(200) null,
            결제담당 nvarchar(200) null,            
            메모 ntext null,
            수정일자 datetime null,
            수정자 int null
          )
        END

      SELECT '200' AS STATUS, '데이터베이스 업데이트 완료' AS Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message
    END CATCH
  </_DataBaseUpdate>
  <_Request>
    Begin Try
      Insert Into NeoAs..N_Service(
        기관코드, 기관명칭, 지사코드, 프로그램,
        서비스상태, 컴퓨터정보, 접수자, 접수연락처, 문의내용, 접수일자,
        현재버전, 보험규정, 병원전화, 팍스, 서버이름, 서버아이디,
        서버비밀번호, 데이터베이스, 인증서암호, 오픈담당자, 수탁기관, 실행파일,
        운영체제, SQL버전, 서비스타입, 수가, 약가, 치료재료,
        담당자
      )
      Values (
        '%s', '%s', '%s', '%s',
        '0', '%s', '%s', '%s', '%s', GETDATE(),
        '%s', '%s', '%s', '%s', '%s', '%s',
        '%s', '%s', '%s', '%s', '%s', '%s',
        '%s', '%s', '%s', '%s', '%s', '%s',
        '%s'
      )
      Select 0 As Status, 'SUCCESS' as Message, max(인덱스) as 'index'  From NeoAs..N_Service
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_Request>
  <_RequestList>
    Select 인덱스, N_Service.기관코드, 기관명칭, 지사코드,
           프로그램, 서비스상태, 컴퓨터정보, 접수자,
           접수연락처, {문의내용}, ISNULL(응급여부, 0) AS 응급여부, CONVERT(char(19),접수일자,120) AS 접수일자,
           현재버전, 보험규정, 병원전화, 팍스, 서버이름, 서버아이디,
           서버비밀번호, 데이터베이스, 인증서암호, 오픈담당자, 수탁기관, 실행파일, ISNULL(실행메뉴,'') AS 실행메뉴, ISNULL(세부화면,'') AS 세부화면,
           운영체제, SQL버전, ISNULL(서비스타입,0) AS 서비스타입, 수가, 약가, 치료재료, ISNULL(취소사유,'') AS 취소사유, ISNULL(본사AS, 0) AS 본사AS, 담당자,
           ISNULL(확인자, '') AS 확인자, ISNULL(확인자ID,'') AS 확인자ID, ISNULL(확인자지사,'') AS 확인자지사, ISNULL(확인자연락처,'') AS 확인자연락처, ISNULL(CONVERT(char(19),확인일자,120),'') AS 확인일자,
           ISNULL(인계자, '') AS 인계자, ISNULL(인계자ID,'') AS 인계자ID, ISNULL(인계자지사,'') AS 인계자지사, ISNULL(인계자연락처,'') AS 인계자연락처, ISNULL(CONVERT(char(19),인계일자,120),'') AS 인계일자,
           ISNULL(처리자, '') AS 처리자, ISNULL(처리자ID,'') AS 처리자ID, ISNULL(처리자지사,'') AS 처리자지사, ISNULL(처리자연락처,'') AS 처리자연락처, ISNULL(CONVERT(char(19),처리일자,120),'') AS 처리일자,
           ISNULL(병원유형, 1) AS 병원유형
    From N_Service
    LEFT JOIN N_병원특이사항
    ON N_Service.기관코드 = N_병원특이사항.기관코드
    Where 1 = 1
    %s
    Order By %s
  </_RequestList>
  <_UpdateAs>
    Begin Try
      Update NeoAs..N_Service
      Set 서비스상태 = %s
      %s
      Where 인덱스 = %s
      Select 0 As Status, 'SUCCESS' As Message
    End Try
    Begin Catch
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    End Catch
  </_UpdateAs>
  <_TakeOver>
    BEGIN TRY
      Update NeoAs..N_Service
      Set 문의내용 = '%s'
      Where 인덱스 = %s

      Select 0 As Status, 'SUCCESS' As Message
    END TRY
    BEGIN catch
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END catch
  </_TakeOver>
  <_ASListSummary>
    Select 기관코드, 기관명칭, 지사코드, 프로그램, -- 서비스상태, ISNULL(응급여부, 0) AS 응급여부, ISNULL(본사AS, 0) AS 본사AS, 담당자,
          CASE 서비스상태 WHEN 0 THEN '미확인'
                         WHEN 1 THEN '미완료'
                         WHEN 2 THEN '미완료'
                         WHEN 3 THEN '미완료'
                         WHEN 4 THEN '완료'
                         WHEN 5 THEN '취소' ELSE '미정' END AS 상태,
          CASE ISNULL(응급여부, 0) WHEN 0 THEN '' ELSE '응급' END AS 응급여부,
          CASE ISNULL(본사AS, 0) WHEN 1 THEN '본사AS' ELSE '' END AS 본사AS,
          CONVERT(char(19),접수일자,120) AS 접수일자,
          ISNULL(확인자, '') AS 확인자, ISNULL(확인자지사,'') AS 확인자지사, ISNULL(CONVERT(char(19),확인일자,120),'') AS 확인일자,
          ISNULL(인계자, '') AS 인계자, ISNULL(인계자지사,'') AS 인계자지사, ISNULL(CONVERT(char(19),인계일자,120),'') AS 인계일자,
          ISNULL(처리자, '') AS 처리자, ISNULL(처리자지사,'') AS 처리자지사, ISNULL(CONVERT(char(19),처리일자,120),'') AS 처리일자,

          CASE WHEN 서비스상태 = 4 AND ISNULL(응급여부, 0) = 0 AND ISNULL(본사AS,0) = 0 THEN '3000원'
               WHEN 서비스상태 = 4 AND ISNULL(응급여부, 0) = 1 AND ISNULL(본사AS,0) = 0 THEN '5000원' ELSE ' - ' END AS 수수료

    From N_Service
    Where 1 = 1
    AND 지사코드 NOT IN ('0000', '0030', '0040')
    AND ISNULL(본사AS,0) = 0
    AND ISNULL(서비스상태,0) = 4
    AND 인계자ID &lt;&gt; 0 AND 처리자ID &lt;&gt; 0
    AND 인계자지사 &lt;&gt; 처리자지사
    {{검색조건}}
    Order By 지사코드
  </_ASListSummary>
  <_Versions_SENSE>
    Select 배포버전 From OCS_SERVER.MediChart.dbo.TB_센스라이브 Order By 배포버전 DESC
  </_Versions_SENSE>
  <_SendASToMember>
    BEGIN TRY
      Update NeoAs..N_Service
      Set 처리자ID = %s,
          처리자 = '%s',
          처리자지사 = '%s',
          처리자연락처 = '%s'
      Where 인덱스 = %s

      Insert Into NeoAs..N_ServiceReply
      (AS인덱스, 처리자ID, 처리자, 처리자지사, 처리내용, 처리일자)
      Values(%s, %s, '%s', '%s', '{%s}님이 {%s}님에게 전달하였습니다.', GETDATE())

      Select 0 As Status, 'SUCCESS' as Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_SendASToMember>
  <_ReplysList>
    Select AS인덱스, 처리자ID, 처리자, 처리자지사, 처리내용, ISNULL(CONVERT(char(19),처리일자,120),'') AS 처리일자 From NeoAs..N_ServiceReply
    Where AS인덱스 = %s
    Order By 처리일자 ASC
  </_ReplysList>
  <_AddReply>
    BEGIN TRY

      Insert Into NeoAs..N_ServiceReply
      (AS인덱스, 처리자ID, 처리자, 처리자지사, 처리내용, 처리일자)
      Values(%s, %s, '%s', '%s', '%s', GETDATE())

      Select 0 As Status, 'SUCCESS' as Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_AddReply>
  <_SaveCustomInfo>
    BEGIN TRY
      IF EXISTS (SELECT * FROM N_HospInfo WHERE 기관코드 = '%s' and 항목명칭 = '%s')
      BEGIN
        update N_HospInfo
        set 설정값 = '%s',
        수정일자 = GETDATE()
        WHERE 기관코드 = '%s' and 항목명칭 = '%s'
      END
      ELSE
      BEGIN
        insert into N_HospInfo
        values('%s', '%s', '%s', GETDATE())
      END

      Select 0 As Status, 'SUCCESS' as Message
    END TRY
    BEGIN CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_SaveCustomInfo>
  <_ASHistory>
    Select 인덱스, 기관코드, 기관명칭, 지사코드,
           프로그램, 서비스상태, 컴퓨터정보, 접수자,
           접수연락처, {문의내용}, ISNULL(응급여부, 0) AS 응급여부, CONVERT(char(19),접수일자,120) AS 접수일자,
           현재버전, 보험규정, 병원전화, 팍스, 서버이름, 서버아이디,
           서버비밀번호, 데이터베이스, 인증서암호, 오픈담당자, 수탁기관, 실행파일, ISNULL(실행메뉴,'') AS 실행메뉴, ISNULL(세부화면,'') AS 세부화면,
           운영체제, SQL버전, ISNULL(서비스타입,0) AS 서비스타입, 수가, 약가, 치료재료, ISNULL(취소사유,'') AS 취소사유, ISNULL(본사AS, 0) AS 본사AS, 담당자,
           ISNULL(확인자, '') AS 확인자, ISNULL(확인자ID,'') AS 확인자ID, ISNULL(확인자지사,'') AS 확인자지사, ISNULL(확인자연락처,'') AS 확인자연락처, ISNULL(CONVERT(char(19),확인일자,120),'') AS 확인일자,
           ISNULL(인계자, '') AS 인계자, ISNULL(인계자ID,'') AS 인계자ID, ISNULL(인계자지사,'') AS 인계자지사, ISNULL(인계자연락처,'') AS 인계자연락처, ISNULL(CONVERT(char(19),인계일자,120),'') AS 인계일자,
           ISNULL(처리자, '') AS 처리자, ISNULL(처리자ID,'') AS 처리자ID, ISNULL(처리자지사,'') AS 처리자지사, ISNULL(처리자연락처,'') AS 처리자연락처, ISNULL(CONVERT(char(19),처리일자,120),'') AS 처리일자,
           CASE WHEN 서비스상태 = 4 AND ISNULL(본사AS,0) = 0  AND 인계자ID &lt;&gt; 0 AND 처리자ID &lt;&gt; 0 AND 인계자지사 &lt;&gt; 처리자지사  AND 지사코드 NOT IN ('0000', '0030', '0040')THEN 1 ELSE 0 END AS 수수료
    From N_Service
    Where 1 = 1
    %s
    Order By %s
  </_ASHistory>
  <_RankTotal>
    SELECT
    	SUM(CASE WHEN 인덱스 is not null THEN 1 ELSE 0 END) AS 전체,
    	SUM(CASE WHEN 서비스상태 = 0 THEN 1 ELSE 0 END) AS 미확인,
      SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
      SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
      SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소,
      SUM(CASE WHEN isnull(본사AS,0) = 1 THEN 1 ELSE 0 END) AS 본사
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
  </_RankTotal>
  <_RankArea>
    SELECT 지사코드,
    SUM(CASE WHEN 서비스상태 = 0 THEN 1 ELSE 0 END) AS 미확인,
    SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
    SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
    SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 0 AND 인계자지사 = 지사코드 AND 인계자지사 &lt;&gt; 처리자지사 AND ISNULL(인계자ID,0) &lt;&gt; 0 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 인계,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 1 AND 인계자지사 = 지사코드 AND 인계자지사 &lt;&gt; 처리자지사 AND ISNULL(인계자ID,0) &lt;&gt; 0 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 응급
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 지사코드
    ORDER BY 완료 DESC
  </_RankArea>
  <_RankMember>
    SELECT 처리자ID, 처리자, 처리자지사,
    SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
    SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
    SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 0 AND 인계자ID &lt;&gt; 0 AND 인계자지사 &lt;&gt; 처리자지사 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 인계,
    SUM(CASE WHEN 서비스상태 = 4 AND 응급여부 = 1 AND 인계자ID &lt;&gt; 0 AND 인계자지사 &lt;&gt; 처리자지사 AND ISNULL(본사AS,0) = 0 THEN 1 ELSE 0 END) AS 응급
    FROM NeoAs..N_Service
    WHERE 1=1
    AND ISNULL(처리자ID,0) &lt;&gt; 0
    --AND 지사코드 NOT IN ('0000', '0030', '0040')
    %s
    GROUP BY 처리자ID, 처리자, 처리자지사
    ORDER BY 완료 DESC, 인계 DESC, 응급 DESC

  </_RankMember>
  <_RankHosp>
    SELECT 기관코드, 기관명칭,
    COUNT(기관코드) AS 요청건수,
    SUM(CASE WHEN 서비스상태 = 0 THEN 1 ELSE 0 END) AS 미확인,
    SUM(CASE WHEN 서비스상태 &gt;= 1 AND 서비스상태 &lt;= 3 THEN 1 ELSE 0 END) AS 미완료,
    SUM(CASE WHEN 서비스상태 = 4 THEN 1 ELSE 0 END) AS 완료,
    SUM(CASE WHEN 서비스상태 = 5 THEN 1 ELSE 0 END) AS 취소
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 기관코드, 기관명칭
    ORDER BY 요청건수 DESC
  </_RankHosp>
  <_RankEmr>
    SELECT 프로그램, COUNT(프로그램) AS 발생건수
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 프로그램
    ORDER BY 발생건수 DESC;

    SELECT 프로그램, CASE WHEN ISNULL(실행파일,'') = '' THEN '기타' ELSE 실행파일 END AS 실행파일, COUNT(CASE WHEN ISNULL(실행파일,'') = '' THEN '기타' ELSE 실행파일 END) AS 발생건수
    FROM NeoAs..N_Service
    WHERE 1=1
    %s
    GROUP BY 프로그램,CASE WHEN ISNULL(실행파일,'') = '' THEN '기타' ELSE 실행파일 END
    ORDER BY 프로그램, 발생건수 DESC
  </_RankEmr>
  <_HospitalManageHistory>
    Select 인덱스, USER_ID, 기관코드, 기관명칭, 프로그램, 작성자, 
          CONVERT(char(10),작성일자 ,120) AS 작성일자, '' AS 내용, CONVERT(char(10), 처리일자, 120) AS 처리일자
    From NeoAs..N_병원일지
    Where 일지구분 = 0
    AND 삭제 = 0
    {{일지조건}}
    Order By 인덱스 DESC;
    Select 인덱스, USER_ID, 기관코드, 기관명칭, 프로그램, 작성자, 
            CONVERT(char(10),작성일자 ,120) AS 작성일자, '' AS 내용, CONVERT(char(10), 처리일자, 120) AS 처리일자 
    From NeoAs..N_병원일지
    Where 일지구분 = 1
    AND 삭제 = 0
    {{일지조건}}
    Order By 인덱스 DESC;
    Select 인덱스, 기관코드, 기관명칭, 프로그램, 접수자, CONVERT(char(10),접수일자 ,120) AS 접수일자 , ISNULL(처리자, '') AS 처리자, 서비스상태, '' AS 내용, 서비스타입
    From NeoAs..N_Service
    Where 1 = 1
    {{AS조건}}
    Order By 인덱스 DESC
  </_HospitalManageHistory>
  <_HospitalManageHistoryWriters>
    Select 작성자 From (
      Select 작성자
      From NeoAs..N_병원일지
      Where 삭제 = 0
      {{일지조건}}      
      union all  
      Select ISNULL(처리자ID, 0) AS 작성자
      From NeoAs..N_Service
      Where 1 = 1
      AND ISNULL(처리자ID, 0) &lt;&gt; 0
      {{AS조건}}      
    ) AS T Group By T.작성자
  </_HospitalManageHistoryWriters>
  <_HospitalManageHistory_SAVE>
    Begin Try
      Insert Into NeoAS..N_병원일지(USER_ID, 기관코드, 기관명칭, 프로그램, 지사코드, 일지구분, 내용, 작성자, 작성일자, 처리일자)
      Values(%s, '%s', '%s', '%s', '%s', %s, '%s', %s, GETDATE(), '%s')
      Select 0 As Status, 'SUCCESS' as Message 
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH    
  </_HospitalManageHistory_SAVE>
  <_HospitalManageHistory_UPDATE>
    Begin Try
      Update NeoAS..N_병원일지
      SET 내용 = '%s',
          일지구분 = %s,
          처리일자 = '%s',
          작성일자 = GETDATE()
      Where 인덱스 = %s
      Select 0 As Status, 'SUCCESS' as Message 
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH   
  </_HospitalManageHistory_UPDATE>
  <_HospitalManageHistory_DELETE>
    Begin Try
      Update NeoAS..N_병원일지
      SET 삭제 = 1
      Where 인덱스 = %s
      Select 0 As Status, 'SUCCESS' as Message 
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH   
  </_HospitalManageHistory_DELETE>
  <_HospitalManageInfo>
    SELECT 병원유형, 전산담당, 결제담당, 메모, ISNULL(CONVERT(char(19), 수정일자, 120),'') AS 수정일자, 수정자 FROM NeoAS..N_병원특이사항
    WHERE USER_ID = %s
  </_HospitalManageInfo>
  <_HospitalManageInfo_SAVE>
    BEGIN Try
      IF EXISTS ( SELECT USER_ID FROM N_병원특이사항 WHERE USER_ID = %s)
        BEGIN
          DELETE FROM N_병원특이사항 WHERE USER_ID = %s
        End
      
      INSERT INTO NeoAS..N_병원특이사항(USER_ID, 기관코드, 병원유형, 전산담당, 결제담당, 메모, 수정일자, 수정자)
      VALUES (%s)
      Select 0 As Status, 'SUCCESS' as Message 
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH  

  </_HospitalManageInfo_SAVE>  
  <_HospitalManageHistoryDetail>
    SELECT 내용 FROM NEOAS..N_병원일지 
    WHERE 인덱스 = {{KEY}}
  </_HospitalManageHistoryDetail>
  <_HospitalManageHistoryDetail_AS>
    SELECT 문의내용 AS 내용 FROM NEOAS..N_Service
    WHERE 인덱스 = {{KEY}}
  </_HospitalManageHistoryDetail_AS>
  <_HospitalVisitStatus>  
    SELECT COUNT(작성자) AS TOTAL
    FROM NEOAS..N_병원일지
    WHERE CONVERT(char(4), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120)
    AND 일지구분 = 0
    AND 작성자 = {{작성자}}
    AND 삭제 = 0;

    SELECT USER_ID, 기관코드, 기관명칭, 작성자,
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-01' THEN 1 ELSE 0 END) AS '1월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-02' THEN 1 ELSE 0 END) AS '2월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-03' THEN 1 ELSE 0 END) AS '3월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-04' THEN 1 ELSE 0 END) AS '4월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-05' THEN 1 ELSE 0 END) AS '5월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-06' THEN 1 ELSE 0 END) AS '6월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-07' THEN 1 ELSE 0 END) AS '7월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-08' THEN 1 ELSE 0 END) AS '8월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-09' THEN 1 ELSE 0 END) AS '9월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-10' THEN 1 ELSE 0 END) AS '10월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-11' THEN 1 ELSE 0 END) AS '11월',
      SUM(CASE WHEN CONVERT(char(7), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120) + '-12' THEN 1 ELSE 0 END) AS '12월'	
    FROM NEOAS..N_병원일지 
    WHERE CONVERT(char(4), 처리일자, 120) = CONVERT(char(4), GETDATE(), 120)
    AND 일지구분 = 0
    AND 작성자 = {{작성자}}
    AND 삭제 = 0
    GROUP BY USER_ID, 작성자, 기관코드, 기관명칭
    ORDER BY  기관명칭
	
  </_HospitalVisitStatus>
  <_TodayWorkList>
    Select *
    From NeoAs..N_병원일지
    Where 일지구분 = 0
    AND 삭제 = 0
    %s;
    Select *
    From NeoAs..N_병원일지
    Where 일지구분 = 1
    AND 삭제 = 0
    %s;
    Select *
    From NeoAs..N_Service
    Where 서비스상태 = 4    
    %s;
  </_TodayWorkList>
  <_SaveDailyReport>
    Begin Try
      Insert Into NeoAs..N_업무보고(
        기타업무, 작성자, 작성일자, 보고일자, 부서, 부서명, 삭제
      )
      Values (
        '{{기타업무}}', {{작성자}}, '{{작성일자}}', '{{보고일자}}', {{부서}}, '{{부서명}}', 0
      )
      Select 0 As Status, 'SUCCESS' as Message, max(인덱스) as 'index'  From NeoAs..N_업무보고
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_SaveDailyReport>
  <_EditDailyReport>
    Begin Try
      Update NeoAS..N_업무보고
      SET 기타업무 = '{{기타업무}}',
      작성자 = {{작성자}},
      작성일자 = '{{작성일자}}',
      보고일자 = '{{보고일자}}',
      부서 = {{부서}},
      부서명 = '{{부서명}}'
      Where 인덱스 = {{인덱스}}
      Select 0 As Status, 'SUCCESS' as Message       
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_EditDailyReport>
  <_SaveDailyReport_Sub>
    Begin Try
      Insert Into NeoAs..N_업무보고sub(
        인덱스, 일지인덱스, 일지구분
      )
      Values {{일지}}
      Select 0 As Status, 'SUCCESS' as Message  From NeoAs..N_업무보고sub
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_SaveDailyReport_Sub>
  <_DailyReportsList>
    Select 작성자 From NeoAs..N_업무보고 Where Convert(char(10),보고일자, 120) = '{{보고일자}}' AND 삭제 = 0  Group By 작성자;
    Select 부서 From NeoAs..N_업무보고 Where Convert(char(10),보고일자, 120) = '{{보고일자}}' AND 삭제 = 0 Group By 부서;

    SELECT M.인덱스, M.기타업무, M.작성자, CONVERT(char(10), M.보고일자, 120) AS 보고일자, CONVERT(varchar,M.작성일자, 120) AS 작성일자, M.부서, M.부서명
    From NeoAs..N_업무보고 AS M
    Where CONVERT(char(10), M.보고일자, 120) = '{{보고일자}}'
    AND M.삭제 = 0
    {{보고서조건}}
    Order By 인덱스 DESC
    ;

    Select A.인덱스, A.USER_ID, A.기관코드, A.기관명칭, A.프로그램, A.작성자,
          CONVERT(char(10),A.작성일자 ,120) AS 작성일자, A.내용, CONVERT(char(10), A.처리일자, 120) AS 처리일자
    From NeoAs..N_병원일지 AS A
    INNER JOIN NeoAS..N_업무보고 AS M
    ON CONVERT(char(10), M.보고일자, 120) = CONVERT(char(10), A.처리일자, 120)
    AND A.작성자 = M.작성자
    {{보고서조건}}
    Where A.일지구분 = 0
    AND A.삭제 = 0
    AND M.삭제 = 0
    AND CONVERT(char(10), A.처리일자, 120) = '{{보고일자}}';

    Select A.인덱스, A.USER_ID, A.기관코드, A.기관명칭, A.프로그램, A.작성자,
          CONVERT(char(10),A.작성일자 ,120) AS 작성일자, A.내용, CONVERT(char(10), A.처리일자, 120) AS 처리일자
    From NeoAs..N_병원일지 AS A
    INNER JOIN NeoAS..N_업무보고 AS M
    ON CONVERT(char(10), M.보고일자, 120) = CONVERT(char(10), A.처리일자, 120)
    AND A.작성자 = M.작성자
    {{보고서조건}}
    Where A.일지구분 = 1
    AND A.삭제 = 0
    AND M.삭제 = 0
    AND CONVERT(char(10), A.처리일자, 120) = '{{보고일자}}';

    Select A.인덱스, A.기관코드, A.기관명칭, A.프로그램, A.접수자,
            CONVERT(char(10),A.접수일자 ,120) AS 접수일자 ,
            ISNULL(A.처리자, '') AS 처리자, ISNULL(A.처리자ID,0) AS 작성자, A.서비스상태, A.문의내용, A.서비스타입
    From NeoAs..N_Service AS A
    INNER JOIN NeoAS..N_업무보고 AS M
    ON CONVERT(char(10), M.보고일자, 120) = CONVERT(char(10), A.처리일자, 120)
    AND A.처리자ID = M.작성자
    {{보고서조건}}
    WHERE CONVERT(char(10), A.처리일자, 120) = '{{보고일자}}'
    AND A.서비스상태 IN (3, 4)
    AND M.삭제 = 0;
    
    Select 인덱스 From NeoAS..N_업무보고 Where Convert(char(10),보고일자, 120) = '{{보고일자}}' AND 작성자 = {{작성자}} AND 삭제 = 0

  </_DailyReportsList>
  <_DailyReportDelete>
    Begin Try
      Update NeoAS..N_업무보고
      SET 삭제 = 1
      Where 인덱스 = %s
      Select 0 As Status, 'SUCCESS' as Message 
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH   
  </_DailyReportDelete>
  <_ProjectID>
    Select ISNULL(MAX(인덱스),0) + 1 AS ID 
    From NeoAS..N_프로젝트
  </_ProjectID>
  <_SaveNewProject>
    Begin Try
      Insert Into NeoAs..N_프로젝트(
        프로젝트ID, 프로젝트명, 프로그램, 요청거래처, 상세내용, 기대효과, 등록자, 등록일자, 수정일자, 삭제
      )
      Values (
        '{{프로젝트ID}}', '{{프로젝트명}}', {{프로그램}}, '{{요청거래처}}', '{{상세내용}}', '{{기대효과}}', {{등록자}}, GETDATE(), GETDATE(), 0
      )

      Insert Into NeoAs..N_프로젝트INFO(
        프로젝트ID, 상태
      )
      values (
        '{{프로젝트ID}}', 0
      )

      Insert Into NeoAs..N_프로젝트FILE(
        프로젝트ID, 파일명
      )
      Values
      {{첨부파일}}

      Select 0 As Status, 'SUCCESS' as Message 
    End Try
    Begin CATCH
      SELECT ERROR_NUMBER() AS Status, ERROR_MESSAGE() AS Message;
    END CATCH
  </_SaveNewProject>  
  <_ProjectList>
    Select P.인덱스, P.프로젝트ID, P.프로젝트명, P.프로그램, ISNULL(P.요청거래처, '') AS 요청거래처, 
           P.상세내용, P.기대효과, P.등록자, CONVERT(varchar, P.등록일자, 120) AS 등록일자, CONVERT(varchar, P.수정일자, 120) AS 수정일자,
           I.상태, ISNULL(I.개발자, '') AS 개발자, I.개발시작일, I.개발종료일
    From NeoAS..N_프로젝트 AS P
    Inner Join NeoAs..N_프로젝트INFO AS I
    ON P.프로젝트ID = I.프로젝트ID
    Where P.삭제 = 0
    {{검색조건}}
    Order By 인덱스 DESC 
  </_ProjectList>
  <_ProjectDetail>
  </_ProjectDetail>
</query>
