extends layout_member
block styles 
  link(rel='stylesheet', href='/plugins/footable-bootstrap/css/footable.bootstrap.min.css')
  link(rel='stylesheet', href='/plugins/sweetalert2/dist/sweetalert2.min.css')    
block content
  div.container-fluid    
    div.media-body
        
  table.table.table-responsive.small#data-table(data-paging="false",data-sorting='false',data-show-toggle='false')        
  
block scripts
  script(src='/plugins/footable-bootstrap/js/footable.js')
  script(src='/plugins/sweetalert2/dist/sweetalert2.min.js')    
  script(src='/plugins/sweetalert2/dist/es6-promise.min.js')
  script(src='/plugins/table2excel/dist/jquery.table2excel.min.js')
  script.
    $(document).ready(function(){
      console.log('loaded');      
      $('body').attr('class', 'white-bg');
      var $pTable = $('table#data-table');
      var params = $.extend(true, {},window.opener.historyData);
      var neo =  $.extend(true, {},window.opener.neo);      
      var ASSTATUS = $.extend(true, {},window.opener.ASSTATUS);      
      var columns = [
          { 'name': '인덱스', 'title': 'ID', 'style': { 'width': 50, 'maxWidth': 50 },  'breakpoints' : 'xs' },
          { 'name': '기관코드', 'title': '기관번호' },
          { 'name': '기관명칭', 'title': '기관명칭',
            formatter : function(value){
              if(value.length > 10){
                return '<a data-toggle="tooltips" title="' + value + '">' + value.substring(0,10) + '...</a>';
              }else{
                return value;
              }
            }
          },
          {
              'name': '프로그램',
              'title': 'EMR',
              formatter: function(value) {
                  if (value === "" || typeof value === "undefined") value = 0;
                  switch (parseInt(value)) {
                      case 1:
                          return "<span class='badge badge-eplus'>Eplus</span>";
                      case 8:
                          return "<span class='badge badge-medi'>메디</span>";
                      case 20:
                          return "<span class='badge badge-sense'>센스</span>";
                  }
              }
          },
          {   'name' : '본사AS', 'title' : '본사AS', "filterable": false,
              formatter : function(value){
                switch (parseInt(value)) {
                  case 0:
                    return "";
                  case 1:
                    return "O";
                  default:
                }
              }
          },
          {   'name' : '응급여부', 'title' : '응급', "filterable": false,
              formatter : function(value){
                switch (parseInt(value)) {
                  case 0:
                    return "";
                  case 1:
                    return "O";
                  default:
                }
              }
          },
          {   'name' : '수수료', 'title' : '수수료', "filterable": false,
              formatter : function(value){
                switch (parseInt(value)) {
                  case 0:
                    return ""
                  case 1:
                    return "O"
                  default:
                }
              }
          },
          {
              'name': '지사코드',
              'title': '담당지사',
              formatter: function(value) {
                  if (value === '' || typeof value === 'undefined') value = '0000';
                  return neo.area[value];
              },
              'breakpoints' : 'xs'
          },
          {
              'name' : '담당자',
              'title' : '담당자',
              formatter : function(value){
                switch (parseInt(value)) {
                  case 0:
                    return '미정';
                  default:
                    return neo.users.GetUserName(value).USER_NAME;
                }
              }
          },
          {
              'name': '서비스상태',
              'title': '상태',
              formatter: function(value) {
                  value = parseInt(value);
                  return ASSTATUS.ServiceName(value);
              },
              'breakpoints' : 'xs'
          },
          { 'name': '접수자', 'title': '접수자', 'breakpoints' : 'md sm xs',
            formatter : function(value){
              if(value.length > 3){
                return '<a data-toggle="tooltips" title="' + value + '">' + value.substring(0,3) + '...</a>';
              }else{
                return value;
              }
            }
          },
          { 'name': '접수일자', 'title': '접수일', 'type': 'date', 'formatString': 'YYYY-MM-DD', 'breakpoints' : 'md sm xs',
            formatter : function(value){
              if (value === '' || typeof value ==='undefined') return '';
              var temp = value.split(' ');
              return temp[0];
            }
          },
          { 'name': '확인자', 'title': '확인자', 'breakpoints' : 'md sm xs' },
          { 'name': '확인일자', 'title': '확인일', 'type': 'date', 'formatString': 'YYYY-MM-DD', 'breakpoints' : 'md sm xs',
            formatter : function(value){
              if (value === '' || typeof value ==='undefined') return '';
              var temp = value.split(' ');
              return temp[0];
            }
          },
          { 'name': '인계자', 'title': '인계자', 'breakpoints' : 'md sm xs' },
          { 'name': '인계일자', 'title': '인계일', 'type': 'date', 'formatString': 'YYYY-MM-DD', 'breakpoints' : 'md sm xs',
            formatter : function(value){
              if (value === '' || typeof value ==='undefined') return '';
              var temp = value.split(' ');
              return temp[0];
            }
          },
          { 'name': '처리자', 'title': '처리자', 'breakpoints' : 'md sm xs' },
          { 'name': '처리일자', 'title': '처리일', 'type': 'date', 'formatString': 'YYYY-MM-DD', 'breakpoints' : 'md sm xs',
            formatter : function(value){
              if (value === '' || typeof value ==='undefined') return '';
              var temp = value.split(' ');
              return temp[0];
            }
          }
      ];
      var rows = params.rows;
      var options = params.options;
      
      if(parseInt(params.mode)===1){
        if(typeof options.startDate === 'function') options.startDate = options.startDate();      
        $('.media-body').append(
          $('<h3>').text('조회기간 : ' + options.startDate + " ~ " + options.endDate + '  ' + params.total)
        );
      }
      
      columns.forEach(function(_col){
        if(_col.name.match(/본사AS|수수료|출력/gi)){
          _col.visible = false;
        }
      })
      
      $pTable.footable({
        'columns' : columns,
        'rows' : rows
      }).bind({
        'init.ft.table' : function(e){
          console.log('init');
        },
        'draw.ft.table' : function(e){
          //alert('');
          swal({
            title: 'A/S 처리내역 엑셀저장',                  
            type: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '저장하기'
          }).then(function() {
            //window.print();
            $pTable.table2excel({
                //Exclude CSS class specific to this plugin
                exclude: ".noExl",
                name: "A/S 처리내역",
                filename: "as처리내역_" + options.startDate + " ~ " + options.endDate,
                fileext: ".xls",
      					exclude_img: true,
      					exclude_links: true,
      					exclude_inputs: true                
            });
          });
        }
      });
    });
    //- (function(){
    //-   
    //-   if(window.matchMedia){
    //-     var mediaQueryList = window.matchMedia('print');
    //-     mediaQueryList.addListener(function(mql){
    //-       if(mql.matches){
    //-         console.log('before print2');
    //-       }else{
    //-         console.log('after print2');
    //-         window.close();
    //-       }
    //-     })
    //-   }else{
    //-     window.onbeforeprint = function(){
    //-       console.log('before print');
    //-     }  
    //-     window.onafterprint = function(){
    //-       console.log('after print');
    //-       window.close();
    //-     }
    //-   }
    //- })();
    

    
